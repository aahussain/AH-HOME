
https://bash.cyberciti.biz/guide/Main_Page
https://bash.cyberciti.biz/guide/Debug_a_script
To print ? variable use the echo command:
pgrep -x mysqld
echo $?
pgrep -x nginx
echo $?
pidof httpd
echo $?
A 0 exit status means the command was successful without any errors. A non-zero (1-255 values) exit status means command was failure.
Linux/Unix bash command to determine if process is running
It is now easy to check if the process was found or not using exit status value:

###################
## pgrep example ##
###################
pgrep -x mysqld >/dev/null && echo "Process found" || echo "Process not found"
pgrep -x httpd >/dev/null && echo "Process found" || echo "Process not found"

###################
## pidof example ##
###################
pidof httpd >/dev/null && echo "Service is running" || echo "Service NOT running"
pidof nginx >/dev/null && echo "Service is running" || echo "Service NOT running"

################
## ps example ##
################
ps -C httpd >/dev/null && echo "Running" || echo "Not running"
ps -C nginx >/dev/null && echo "Running" || echo "Not running

# To check a service

#!/bin/bash
SERVICE="nginx"
if pgrep -x "$SERVICE" >/dev/null
then
    echo "$SERVICE is running"
else
    echo "$SERVICE stopped"
    # uncomment to start nginx if stopped
    # systemctl start nginx
    # mail
fi

# To check home folder / user id ..etc
#!/bin/bash
# set var
AUTOHOME_FILE=/etc/auto.home

# get user name
read -p "Enter a user name : " username

# try to locate username in in /etc/passwd
#
grep "^$username" $AUTOHOME_FILE > /dev/null

# store exit status of grep
# if found grep will return 0 exit stauts
# if not found, grep will return a nonzero exit stauts
status=$?

if test $status -eq 0
then
	echo "User '$username' found in $AUTOHOME_FILE file."
else
	echo "User '$username' not found in $AUTOHOME_FILE file."
fi
